pipeline {
    agent any

    environment {
        DOCKERHUB_USERNAME = "xyz"
        APP_NAME = "argocd-app"
        IMAGE_TAG = "${BUILD_NUMBER}"
        IMAGE_NAME = "${DOCKERHUB_USERNAME}" + "/" + "${APP_NAME}"
//  Docker Hub password configured in Jenkins Credentials with the ID is 'dockerhub'
        REGISTRY_CREDS = 'dockerhub'
        JENKINS_API_TOKEN = credentials("JENKINS_API_TOKEN")
    }

    stages{
        stage('Cleanup Workspace'){
            steps{
                script{
                   cleanWs()
                }
            }
        }
        stage("Checkout from SCM"){
            steps{
                script{
//  GitHub password configured in Jenkins Credentials with the ID is 'github'
                    git credentialsId: 'github', 
                    url: 'https://github.com/Ashfaque-9x/register-app.git',
                    branch: 'main'
                }
            }
        }
        stage("Build & Push Docker Image"){
            steps{
                script{
                    docker_image = docker.build "${IMAGE_NAME}"
                }
            }
        }
        stage("Build & Push Docker Image"){
            steps{
                script{
                    docker.withRegistry('',REGISTRY_CREDS){
                        docker_image.push("$BUILD_NUMBER")
                        docker_image.push('latest')
                    }
                }
            }
        }
        stage ('Delete Docker Images'){
            steps{
                script{
                    sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker rmi ${IMAGE_NAME}:latest"
                }
            }
        }
        stage('Updatig Kubernetes deployment file'){
            steps{
                script{
                    sh """
                    cat deployment.yaml
                    sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yaml
                    cat deployment.yaml
                    """
                }
            }
        }
        stage('Push the changed deployment file to Git'){
            steps{
                script{
                    sh """
                      git config --global user.name "abcd"
                      git config --global user.email "abcdxyz@gmail.com"
                      git add deployment.yaml
                      git commit -m "Updated the Deployment file"
                    """
                    withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
                      sh "git push https://github.com/Ashfaque-9x/register-app.git main"
                    }
                }
            }
        }
    }
}
